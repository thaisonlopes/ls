<ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="jakarta.faces.core"
    xmlns:h="jakarta.faces.html"
    xmlns:ui="jakarta.faces.facelets"
    xmlns:p="primefaces">

    <h:outputScript name="js/layout.config.js" library="layout" />

    <p:sidebar id="configSidebar" widgetVar="layoutConfigWidget" position="#{app.rtl ? 'left' : 'right'}" blockScroll="true" showCloseIcon="false" baseZIndex="1000"
        styleClass="layout-config fs-small p-0" style="width: 20rem;" appendTo="@(.layout-wrapper)">
        <div class="layout-config-panel flex flex-column">
            <div class="px-3 pt-3">
                <h5>Theme Customization</h5>
                <span>Ultima offers different themes for layout, topbar, menu etc.</span>
            </div>

            <hr class="mb-0" />

            <div class="layout-config-options p-3">
                <h:form id="layoutConfigForm">
                    <p:remoteCommand name="refreshChart" update="@(.ui-chart)" onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" />

                    <h6>Layout Mode</h6>
                    <p:selectOneRadio value="#{app.layoutMode}" converter="org.primefaces.layout.layoutTypeConverter" onchange="PrimeFaces.LayoutConfigurator.changeLayoutMode(event.target.value, '#{app.menuTheme}', '#{app.topbarTheme}', '#{app.componentTheme}', refreshChart)" styleClass="fs-small">
                        <f:selectItem itemLabel="Light" itemValue="light" />
                        <f:selectItem itemLabel="Dark" itemValue="dark"/>
                        <p:ajax onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" update="layoutConfigForm layoutTopbarForm:app-logo layoutFooterForm:footer-logo" />
                    </p:selectOneRadio>

                    <h6>Menu Mode</h6>
                    <p:selectOneRadio value="#{app.menuMode}" converter="org.primefaces.layout.menuTypeConverter" layout="responsive" columns="2" onchange="PrimeFaces.LayoutConfigurator.changeMenuMode('#{app.menuMode}', event.target.value)" styleClass="fs-small grid-radio">
                        <f:selectItem itemLabel="Static" itemValue="static"/>
                        <f:selectItem itemLabel="Overlay" itemValue="overlay"/>
                        <f:selectItem itemLabel="Horizontal" itemValue="horizontal"/>
                        <f:selectItem itemLabel="Slim" itemValue="slim"/>
                        <p:ajax onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" update="layoutMenuForm layoutConfigForm layoutTopbarForm" />
                    </p:selectOneRadio>

                    <h6>Inline Menu Position</h6>
                    <p:selectOneRadio value="#{app.inlineMenuPosition}" converter="org.primefaces.layout.inlineMenuTypeConverter" styleClass="fs-small">
                        <f:selectItem itemLabel="Top" itemValue="top"/>
                        <f:selectItem itemLabel="Bottom" itemValue="bottom"/>
                        <f:selectItem itemLabel="Both" itemValue="both"/>
                        <p:ajax onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" update="layoutMenuForm layoutConfigForm" />
                    </p:selectOneRadio>

                    <h6>Input Background</h6>
                    <p:selectOneRadio value="#{app.inputStyle}" converter="org.primefaces.layout.inputStyleTypeConverter" onchange="PrimeFaces.LayoutConfigurator.changeInputStyle('#{app.inputStyle}', event.target.value)" styleClass="fs-small">
                        <f:selectItem itemLabel="Outlined" itemValue="outlined"/>
                        <f:selectItem itemLabel="Filled" itemValue="filled"/>
                        <p:ajax onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" update="layoutConfigForm" />
                    </p:selectOneRadio>

                    <h6>Ripple Effect</h6>
                    <p:toggleSwitch value="#{app.ripple}" onchange="window.location.reload();">
                        <p:ajax onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" update="layoutConfigForm" />
                    </p:toggleSwitch>

                    <h6>RTL</h6>
                    <p:toggleSwitch value="#{app.rtl}" onchange="PrimeFaces.LayoutConfigurator.toggleRTL()">
                        <p:ajax onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" update="layoutMenuForm layoutRightMenuForm layoutConfigForm configSidebar" oncomplete="typeof forceUpdate !== 'undefined' ? forceUpdate() : null" />
                    </p:toggleSwitch>

                    <h6>Menu Themes</h6>
                    <ui:fragment rendered="#{app.isLightLayout()}">
                        <div class="grid">
                            <ui:repeat value="#{config.menuThemes}" var="t">
                                <div class="col col-fixed">
                                    <p:commandLink actionListener="#{app.setMenuTheme(t.name)}" styleClass="layout-config-color-option" process="@this" update="layoutConfigForm"
                                        onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" oncomplete="PrimeFaces.LayoutConfigurator.changeMenuTheme('#{app.menuTheme}', '#{t.name}')">
                                        <span class="color" style="background-color: #{t.value}" title="#{t.name}"></span>
                                        <ui:fragment rendered="#{t.name eq app.menuTheme}">
                                            <span class="check flex align-items-center justify-content-center">
                                                <i class="pi pi-check" style="color: var(--menu-text-color)"></i>
                                            </span>
                                        </ui:fragment>
                                    </p:commandLink>
                                </div>
                            </ui:repeat>
                        </div>
                    </ui:fragment>
                    <ui:fragment rendered="#{app.isDarkLayout()}">
                        <p>Menu themes are only available in light mode by design as large surfaces can emit too much brightness in dark mode.</p>
                    </ui:fragment>

                    <h6>Topbar Themes</h6>
                    <div class="grid">
                        <ui:repeat value="#{config.topbarThemes}" var="t">
                            <div class="col col-fixed">
                                <p:commandLink actionListener="#{app.setTopbarTheme(t.name)}" styleClass="layout-config-color-option" process="@this" update="layoutConfigForm layoutTopbarForm:app-logo"
                                    onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" oncomplete="PrimeFaces.LayoutConfigurator.changeTopbarTheme('#{app.topbarTheme}', '#{t.name}')">
                                    <span class="color" style="background-color: #{t.value}" title="#{t.name}"></span>
                                    <ui:fragment rendered="#{t.name eq app.topbarTheme}">
                                        <span class="check flex align-items-center justify-content-center">
                                            <i class="pi pi-check" style="color: var(--topbar-text-color)"></i>
                                        </span>
                                    </ui:fragment>
                                </p:commandLink>
                            </div>
                        </ui:repeat>
                    </div>

                    <h6>Component Themes</h6>
                    <div class="grid">
                        <ui:repeat value="#{config.themes}" var="t">
                            <div class="col col-fixed">
                                <p:commandLink actionListener="#{app.setComponentTheme(t.name)}" styleClass="layout-config-color-option" process="@this" update="layoutConfigForm"
                                    onstart="PrimeFaces.LayoutConfigurator.beforeResourceChange()" oncomplete="PrimeFaces.LayoutConfigurator.changeComponentTheme('#{t.name}', #{app.isDarkLayout()})">
                                    <span class="color" style="background-color: #{t.value}" title="#{t.name}"></span>
                                    <ui:fragment rendered="#{t.name eq app.componentTheme}">
                                        <span class="check flex align-items-center justify-content-center">
                                            <i class="pi pi-check" style="color: var(--primary-color-text)"></i>
                                        </span>
                                    </ui:fragment>
                                </p:commandLink>
                            </div>
                        </ui:repeat>
                    </div>
                </h:form>
            </div>
        </div>
    </p:sidebar>

    <p:button icon="pi pi-cog" styleClass="layout-config-button" onclick="PF('layoutConfigWidget').show(); return false;" />
</ui:composition>